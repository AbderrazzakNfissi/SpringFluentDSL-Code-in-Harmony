/**
 * generated by Xtext 2.32.0
 */
package org.xtext.spring.fluent.springFluentDSL;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Dependency Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.xtext.spring.fluent.springFluentDSL.SpringFluentDSLPackage#getDependencyType()
 * @model
 * @generated
 */
public enum DependencyType implements Enumerator
{
  /**
   * The '<em><b>Spring Data Jpa</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPRING_DATA_JPA_VALUE
   * @generated
   * @ordered
   */
  SPRING_DATA_JPA(0, "SpringDataJpa", "SpringDataJpa"),

  /**
   * The '<em><b>Spring Web</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPRING_WEB_VALUE
   * @generated
   * @ordered
   */
  SPRING_WEB(1, "SpringWeb", "SpringWeb"),

  /**
   * The '<em><b>Lombok</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LOMBOK_VALUE
   * @generated
   * @ordered
   */
  LOMBOK(2, "Lombok", "Lombok"),

  /**
   * The '<em><b>My SQL Driver</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MY_SQL_DRIVER_VALUE
   * @generated
   * @ordered
   */
  MY_SQL_DRIVER(3, "MySQLDriver", "MySQLDriver"),

  /**
   * The '<em><b>Dev Tools</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DEV_TOOLS_VALUE
   * @generated
   * @ordered
   */
  DEV_TOOLS(4, "DevTools", "DevTools"),

  /**
   * The '<em><b>Thymeleaf</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #THYMELEAF_VALUE
   * @generated
   * @ordered
   */
  THYMELEAF(5, "Thymeleaf", "Thymeleaf"),

  /**
   * The '<em><b>Swagger</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SWAGGER_VALUE
   * @generated
   * @ordered
   */
  SWAGGER(6, "Swagger", "Swagger"),

  /**
   * The '<em><b>Spring Security</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPRING_SECURITY_VALUE
   * @generated
   * @ordered
   */
  SPRING_SECURITY(7, "SpringSecurity", "SpringSecurity");

  /**
   * The '<em><b>Spring Data Jpa</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPRING_DATA_JPA
   * @model name="SpringDataJpa"
   * @generated
   * @ordered
   */
  public static final int SPRING_DATA_JPA_VALUE = 0;

  /**
   * The '<em><b>Spring Web</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPRING_WEB
   * @model name="SpringWeb"
   * @generated
   * @ordered
   */
  public static final int SPRING_WEB_VALUE = 1;

  /**
   * The '<em><b>Lombok</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #LOMBOK
   * @model name="Lombok"
   * @generated
   * @ordered
   */
  public static final int LOMBOK_VALUE = 2;

  /**
   * The '<em><b>My SQL Driver</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MY_SQL_DRIVER
   * @model name="MySQLDriver"
   * @generated
   * @ordered
   */
  public static final int MY_SQL_DRIVER_VALUE = 3;

  /**
   * The '<em><b>Dev Tools</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #DEV_TOOLS
   * @model name="DevTools"
   * @generated
   * @ordered
   */
  public static final int DEV_TOOLS_VALUE = 4;

  /**
   * The '<em><b>Thymeleaf</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #THYMELEAF
   * @model name="Thymeleaf"
   * @generated
   * @ordered
   */
  public static final int THYMELEAF_VALUE = 5;

  /**
   * The '<em><b>Swagger</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SWAGGER
   * @model name="Swagger"
   * @generated
   * @ordered
   */
  public static final int SWAGGER_VALUE = 6;

  /**
   * The '<em><b>Spring Security</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPRING_SECURITY
   * @model name="SpringSecurity"
   * @generated
   * @ordered
   */
  public static final int SPRING_SECURITY_VALUE = 7;

  /**
   * An array of all the '<em><b>Dependency Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final DependencyType[] VALUES_ARRAY =
    new DependencyType[]
    {
      SPRING_DATA_JPA,
      SPRING_WEB,
      LOMBOK,
      MY_SQL_DRIVER,
      DEV_TOOLS,
      THYMELEAF,
      SWAGGER,
      SPRING_SECURITY,
    };

  /**
   * A public read-only list of all the '<em><b>Dependency Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<DependencyType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Dependency Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static DependencyType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      DependencyType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Dependency Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static DependencyType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      DependencyType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Dependency Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static DependencyType get(int value)
  {
    switch (value)
    {
      case SPRING_DATA_JPA_VALUE: return SPRING_DATA_JPA;
      case SPRING_WEB_VALUE: return SPRING_WEB;
      case LOMBOK_VALUE: return LOMBOK;
      case MY_SQL_DRIVER_VALUE: return MY_SQL_DRIVER;
      case DEV_TOOLS_VALUE: return DEV_TOOLS;
      case THYMELEAF_VALUE: return THYMELEAF;
      case SWAGGER_VALUE: return SWAGGER;
      case SPRING_SECURITY_VALUE: return SPRING_SECURITY;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private DependencyType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //DependencyType

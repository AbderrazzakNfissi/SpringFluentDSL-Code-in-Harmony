/*
 * generated by Xtext 2.32.0
 */
package org.xtext.spring.fluent.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SpringFluentDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPrefixAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPrefixPrefixParserRuleCall_0_0 = (RuleCall)cPrefixAssignment_0.eContents().get(0);
		private final Assignment cAppNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAppNameAppNameParserRuleCall_1_0 = (RuleCall)cAppNameAssignment_1.eContents().get(0);
		private final Assignment cDependenciesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDependenciesDependenciesParserRuleCall_2_0 = (RuleCall)cDependenciesAssignment_2.eContents().get(0);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesEntitiesParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		
		//Model:
		//  prefix=Prefix
		//  appName=AppName
		//  dependencies=Dependencies
		//  entities=Entities;
		@Override public ParserRule getRule() { return rule; }
		
		//prefix=Prefix
		//appName=AppName
		//dependencies=Dependencies
		//entities=Entities
		public Group getGroup() { return cGroup; }
		
		//prefix=Prefix
		public Assignment getPrefixAssignment_0() { return cPrefixAssignment_0; }
		
		//Prefix
		public RuleCall getPrefixPrefixParserRuleCall_0_0() { return cPrefixPrefixParserRuleCall_0_0; }
		
		//appName=AppName
		public Assignment getAppNameAssignment_1() { return cAppNameAssignment_1; }
		
		//AppName
		public RuleCall getAppNameAppNameParserRuleCall_1_0() { return cAppNameAppNameParserRuleCall_1_0; }
		
		//dependencies=Dependencies
		public Assignment getDependenciesAssignment_2() { return cDependenciesAssignment_2; }
		
		//Dependencies
		public RuleCall getDependenciesDependenciesParserRuleCall_2_0() { return cDependenciesDependenciesParserRuleCall_2_0; }
		
		//entities=Entities
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }
		
		//Entities
		public RuleCall getEntitiesEntitiesParserRuleCall_3_0() { return cEntitiesEntitiesParserRuleCall_3_0; }
	}
	public class PrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Prefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPrefixAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPrefixKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPrefixAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPrefixSTRINGTerminalRuleCall_2_0 = (RuleCall)cPrefixAssignment_2.eContents().get(0);
		
		//Prefix:
		//  {Prefix} 'prefix:' prefix=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//{Prefix} 'prefix:' prefix=STRING
		public Group getGroup() { return cGroup; }
		
		//{Prefix}
		public Action getPrefixAction_0() { return cPrefixAction_0; }
		
		//'prefix:'
		public Keyword getPrefixKeyword_1() { return cPrefixKeyword_1; }
		
		//prefix=STRING
		public Assignment getPrefixAssignment_2() { return cPrefixAssignment_2; }
		
		//STRING
		public RuleCall getPrefixSTRINGTerminalRuleCall_2_0() { return cPrefixSTRINGTerminalRuleCall_2_0; }
	}
	public class AppNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.AppName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAppNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cApp_nameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAppNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAppNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cAppNameAssignment_2.eContents().get(0);
		
		//AppName:
		//  {AppName} 'app_name:' appName=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//{AppName} 'app_name:' appName=STRING
		public Group getGroup() { return cGroup; }
		
		//{AppName}
		public Action getAppNameAction_0() { return cAppNameAction_0; }
		
		//'app_name:'
		public Keyword getApp_nameKeyword_1() { return cApp_nameKeyword_1; }
		
		//appName=STRING
		public Assignment getAppNameAssignment_2() { return cAppNameAssignment_2; }
		
		//STRING
		public RuleCall getAppNameSTRINGTerminalRuleCall_2_0() { return cAppNameSTRINGTerminalRuleCall_2_0; }
	}
	public class DependenciesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Dependencies");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDependenciesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDependenciesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDependenciesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDependenciesDependencyParserRuleCall_3_0 = (RuleCall)cDependenciesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDependenciesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDependenciesDependencyParserRuleCall_4_1_0 = (RuleCall)cDependenciesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Dependencies:
		//  {Dependencies} 'dependencies' '{'
		//    dependencies+=Dependency (',' dependencies+=Dependency)*
		//  '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Dependencies} 'dependencies' '{'
		//  dependencies+=Dependency (',' dependencies+=Dependency)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Dependencies}
		public Action getDependenciesAction_0() { return cDependenciesAction_0; }
		
		//'dependencies'
		public Keyword getDependenciesKeyword_1() { return cDependenciesKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//dependencies+=Dependency
		public Assignment getDependenciesAssignment_3() { return cDependenciesAssignment_3; }
		
		//Dependency
		public RuleCall getDependenciesDependencyParserRuleCall_3_0() { return cDependenciesDependencyParserRuleCall_3_0; }
		
		//(',' dependencies+=Dependency)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//dependencies+=Dependency
		public Assignment getDependenciesAssignment_4_1() { return cDependenciesAssignment_4_1; }
		
		//Dependency
		public RuleCall getDependenciesDependencyParserRuleCall_4_1_0() { return cDependenciesDependencyParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Dependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDependencyAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cDependencyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDependencyDependencyTypeEnumRuleCall_1_0 = (RuleCall)cDependencyAssignment_1.eContents().get(0);
		
		// //to complete
		//Dependency:
		//  {Dependency} dependency=DependencyType;
		@Override public ParserRule getRule() { return rule; }
		
		//{Dependency} dependency=DependencyType
		public Group getGroup() { return cGroup; }
		
		//{Dependency}
		public Action getDependencyAction_0() { return cDependencyAction_0; }
		
		//dependency=DependencyType
		public Assignment getDependencyAssignment_1() { return cDependencyAssignment_1; }
		
		//DependencyType
		public RuleCall getDependencyDependencyTypeEnumRuleCall_1_0() { return cDependencyDependencyTypeEnumRuleCall_1_0; }
	}
	public class EntitiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Entities");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntitiesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEntitiesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesEntityParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Entities:
		//  {Entities} 'entities' '{'
		//    entities+=Entity*
		//  '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Entities} 'entities' '{'
		//  entities+=Entity*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Entities}
		public Action getEntitiesAction_0() { return cEntitiesAction_0; }
		
		//'entities'
		public Keyword getEntitiesKeyword_1() { return cEntitiesKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//entities+=Entity*
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_3_0() { return cEntitiesEntityParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cStrategyKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cEqualsSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cStrategyAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cStrategyStrategyParserRuleCall_2_4_0 = (RuleCall)cStrategyAssignment_2_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Assignment cSuperTypeAssignment_2_6 = (Assignment)cGroup_2.eContents().get(6);
		private final CrossReference cSuperTypeEntityCrossReference_2_6_0 = (CrossReference)cSuperTypeAssignment_2_6.eContents().get(0);
		private final RuleCall cSuperTypeEntityIDTerminalRuleCall_2_6_0_1 = (RuleCall)cSuperTypeEntityCrossReference_2_6_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFeatureAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFeatureFeatureParserRuleCall_4_0 = (RuleCall)cFeatureAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Entity:
		//  'entity' name=ID ('extends' '['
		//    'strategy' '=' strategy=Strategy ']'
		//    superType=[Entity|ID]
		//  )? '{'
		//    feature=Feature
		//  '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'entity' name=ID ('extends' '['
		//  'strategy' '=' strategy=Strategy ']'
		//  superType=[Entity|ID]
		//)? '{'
		//  feature=Feature
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' '['
		//   'strategy' '=' strategy=Strategy ']'
		//   superType=[Entity|ID]
		// )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_1() { return cLeftSquareBracketKeyword_2_1; }
		
		//'strategy'
		public Keyword getStrategyKeyword_2_2() { return cStrategyKeyword_2_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_3() { return cEqualsSignKeyword_2_3; }
		
		//strategy=Strategy
		public Assignment getStrategyAssignment_2_4() { return cStrategyAssignment_2_4; }
		
		//Strategy
		public RuleCall getStrategyStrategyParserRuleCall_2_4_0() { return cStrategyStrategyParserRuleCall_2_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_5() { return cRightSquareBracketKeyword_2_5; }
		
		//superType=[Entity|ID]
		public Assignment getSuperTypeAssignment_2_6() { return cSuperTypeAssignment_2_6; }
		
		//[Entity|ID]
		public CrossReference getSuperTypeEntityCrossReference_2_6_0() { return cSuperTypeEntityCrossReference_2_6_0; }
		
		//ID
		public RuleCall getSuperTypeEntityIDTerminalRuleCall_2_6_0_1() { return cSuperTypeEntityIDTerminalRuleCall_2_6_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//feature=Feature
		public Assignment getFeatureAssignment_4() { return cFeatureAssignment_4; }
		
		//Feature
		public RuleCall getFeatureFeatureParserRuleCall_4_0() { return cFeatureFeatureParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeatureAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperationOperationParserRuleCall_1_0 = (RuleCall)cOperationAssignment_1.eContents().get(0);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdIDENTITYParserRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Assignment cRelationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRelationsRelationParserRuleCall_4_0 = (RuleCall)cRelationsAssignment_4.eContents().get(0);
		
		//Feature:
		//  {Feature} operation=Operation id=IDENTITY  attributes+=(Attribute)* relations+=(Relation)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Feature} operation=Operation id=IDENTITY  attributes+=(Attribute)* relations+=(Relation)*
		public Group getGroup() { return cGroup; }
		
		//{Feature}
		public Action getFeatureAction_0() { return cFeatureAction_0; }
		
		//operation=Operation
		public Assignment getOperationAssignment_1() { return cOperationAssignment_1; }
		
		//Operation
		public RuleCall getOperationOperationParserRuleCall_1_0() { return cOperationOperationParserRuleCall_1_0; }
		
		//id=IDENTITY
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//IDENTITY
		public RuleCall getIdIDENTITYParserRuleCall_2_0() { return cIdIDENTITYParserRuleCall_2_0; }
		
		//attributes+=(Attribute)*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//(Attribute)
		public RuleCall getAttributesAttributeParserRuleCall_3_0() { return cAttributesAttributeParserRuleCall_3_0; }
		
		//relations+=(Relation)*
		public Assignment getRelationsAssignment_4() { return cRelationsAssignment_4; }
		
		//(Relation)
		public RuleCall getRelationsRelationParserRuleCall_4_0() { return cRelationsRelationParserRuleCall_4_0; }
	}
	public class StrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Strategy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStrategyAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cStrategyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cStrategyAlternatives_1_0 = (Alternatives)cStrategyAssignment_1.eContents().get(0);
		private final Keyword cStrategySingleTableKeyword_1_0_0 = (Keyword)cStrategyAlternatives_1_0.eContents().get(0);
		private final Keyword cStrategyJoinedTableKeyword_1_0_1 = (Keyword)cStrategyAlternatives_1_0.eContents().get(1);
		private final Keyword cStrategyTablePerClassKeyword_1_0_2 = (Keyword)cStrategyAlternatives_1_0.eContents().get(2);
		
		//Strategy :
		//    {Strategy}
		//     strategy=('SingleTable' | 'JoinedTable' | 'TablePerClass');
		@Override public ParserRule getRule() { return rule; }
		
		//{Strategy}
		// strategy=('SingleTable' | 'JoinedTable' | 'TablePerClass')
		public Group getGroup() { return cGroup; }
		
		//{Strategy}
		public Action getStrategyAction_0() { return cStrategyAction_0; }
		
		//strategy=('SingleTable' | 'JoinedTable' | 'TablePerClass')
		public Assignment getStrategyAssignment_1() { return cStrategyAssignment_1; }
		
		//('SingleTable' | 'JoinedTable' | 'TablePerClass')
		public Alternatives getStrategyAlternatives_1_0() { return cStrategyAlternatives_1_0; }
		
		//'SingleTable'
		public Keyword getStrategySingleTableKeyword_1_0_0() { return cStrategySingleTableKeyword_1_0_0; }
		
		//'JoinedTable'
		public Keyword getStrategyJoinedTableKeyword_1_0_1() { return cStrategyJoinedTableKeyword_1_0_1; }
		
		//'TablePerClass'
		public Keyword getStrategyTablePerClassKeyword_1_0_2() { return cStrategyTablePerClassKeyword_1_0_2; }
	}
	public class IDENTITYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.IDENTITY");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cPkKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//IDENTITY:
		//    'id' ':' type=Type 'pk' ;
		@Override public ParserRule getRule() { return rule; }
		
		//'id' ':' type=Type 'pk'
		public Group getGroup() { return cGroup; }
		
		//'id'
		public Keyword getIdKeyword_0() { return cIdKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=Type
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//Type
		public RuleCall getTypeTypeEnumRuleCall_2_0() { return cTypeTypeEnumRuleCall_2_0; }
		
		//'pk'
		public Keyword getPkKeyword_3() { return cPkKeyword_3; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOpsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOperationSTRINGTerminalRuleCall_2_0 = (RuleCall)cOperationAssignment_2.eContents().get(0);
		
		//Operation:
		//  'ops' ':' (
		//    operation=STRING
		//  );
		@Override public ParserRule getRule() { return rule; }
		
		//'ops' ':' (
		//  operation=STRING
		//)
		public Group getGroup() { return cGroup; }
		
		//'ops'
		public Keyword getOpsKeyword_0() { return cOpsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//(
		//   operation=STRING
		// )
		public Assignment getOperationAssignment_2() { return cOperationAssignment_2; }
		
		//STRING
		public RuleCall getOperationSTRINGTerminalRuleCall_2_0() { return cOperationSTRINGTerminalRuleCall_2_0; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		
		//Attribute:
		//  name=ID ':' type=Type;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' type=Type
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//type=Type
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//Type
		public RuleCall getTypeTypeEnumRuleCall_2_0() { return cTypeTypeEnumRuleCall_2_0; }
	}
	public class RelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Relation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTargetEntityCrossReference_2_0 = (CrossReference)cTargetAssignment_2.eContents().get(0);
		private final RuleCall cTargetEntityIDTerminalRuleCall_2_0_1 = (RuleCall)cTargetEntityCrossReference_2_0.eContents().get(1);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cTypeAlternatives_3_0 = (Alternatives)cTypeAssignment_3.eContents().get(0);
		private final Keyword cTypeMtoKeyword_3_0_0 = (Keyword)cTypeAlternatives_3_0.eContents().get(0);
		private final Keyword cTypeOtmKeyword_3_0_1 = (Keyword)cTypeAlternatives_3_0.eContents().get(1);
		private final Keyword cTypeOtoKeyword_3_0_2 = (Keyword)cTypeAlternatives_3_0.eContents().get(2);
		private final Keyword cTypeMtmKeyword_3_0_3 = (Keyword)cTypeAlternatives_3_0.eContents().get(3);
		
		//Relation:
		//  name=ID ':' target=[Entity|ID] type=('mto' | 'otm' | 'oto' | 'mtm');
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' target=[Entity|ID] type=('mto' | 'otm' | 'oto' | 'mtm')
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//target=[Entity|ID]
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }
		
		//[Entity|ID]
		public CrossReference getTargetEntityCrossReference_2_0() { return cTargetEntityCrossReference_2_0; }
		
		//ID
		public RuleCall getTargetEntityIDTerminalRuleCall_2_0_1() { return cTargetEntityIDTerminalRuleCall_2_0_1; }
		
		//type=('mto' | 'otm' | 'oto' | 'mtm')
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//('mto' | 'otm' | 'oto' | 'mtm')
		public Alternatives getTypeAlternatives_3_0() { return cTypeAlternatives_3_0; }
		
		//'mto'
		public Keyword getTypeMtoKeyword_3_0_0() { return cTypeMtoKeyword_3_0_0; }
		
		//'otm'
		public Keyword getTypeOtmKeyword_3_0_1() { return cTypeOtmKeyword_3_0_1; }
		
		//'oto'
		public Keyword getTypeOtoKeyword_3_0_2() { return cTypeOtoKeyword_3_0_2; }
		
		//'mtm'
		public Keyword getTypeMtmKeyword_3_0_3() { return cTypeMtmKeyword_3_0_3; }
	}
	
	public class DependencyTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.DependencyType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSpringDataJpaEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSpringDataJpaSpringDataJpaKeyword_0_0 = (Keyword)cSpringDataJpaEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSpringWebEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSpringWebSpringWebKeyword_1_0 = (Keyword)cSpringWebEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLombokEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLombokLombokKeyword_2_0 = (Keyword)cLombokEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMySQLDriverEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMySQLDriverMySQLDriverKeyword_3_0 = (Keyword)cMySQLDriverEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDevToolsEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDevToolsDevToolsKeyword_4_0 = (Keyword)cDevToolsEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSpringKafkaEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSpringKafkaSpringKafkaKeyword_5_0 = (Keyword)cSpringKafkaEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationWSEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cSpringIntegrationWSSpringIntegrationWSKeyword_6_0 = (Keyword)cSpringIntegrationWSEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationWebFluxEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cSpringIntegrationWebFluxSpringIntegrationWebFluxKeyword_7_0 = (Keyword)cSpringIntegrationWebFluxEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationSecurityEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cSpringIntegrationSecuritySpringIntegrationSecurityKeyword_8_0 = (Keyword)cSpringIntegrationSecurityEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationRedisEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cSpringIntegrationRedisSpringIntegrationRedisKeyword_9_0 = (Keyword)cSpringIntegrationRedisEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationMongoDBEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cSpringIntegrationMongoDBSpringIntegrationMongoDBKeyword_10_0 = (Keyword)cSpringIntegrationMongoDBEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationKafkaEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cSpringIntegrationKafkaSpringIntegrationKafkaKeyword_11_0 = (Keyword)cSpringIntegrationKafkaEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationJPAEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cSpringIntegrationJPASpringIntegrationJPAKeyword_12_0 = (Keyword)cSpringIntegrationJPAEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationJDBCEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cSpringIntegrationJDBCSpringIntegrationJDBCKeyword_13_0 = (Keyword)cSpringIntegrationJDBCEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationHTTPEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cSpringIntegrationHTTPSpringIntegrationHTTPKeyword_14_0 = (Keyword)cSpringIntegrationHTTPEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationAMQPEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cSpringIntegrationAMQPSpringIntegrationAMQPKeyword_15_0 = (Keyword)cSpringIntegrationAMQPEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cSpringWebFluxEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cSpringWebFluxSpringWebFluxKeyword_16_0 = (Keyword)cSpringWebFluxEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cSpringWebServicesEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cSpringWebServicesSpringWebServicesKeyword_17_0 = (Keyword)cSpringWebServicesEnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cSpringValidationEnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cSpringValidationSpringValidationKeyword_18_0 = (Keyword)cSpringValidationEnumLiteralDeclaration_18.eContents().get(0);
		private final EnumLiteralDeclaration cSpringThymeleafEnumLiteralDeclaration_19 = (EnumLiteralDeclaration)cAlternatives.eContents().get(19);
		private final Keyword cSpringThymeleafSpringThymeleafKeyword_19_0 = (Keyword)cSpringThymeleafEnumLiteralDeclaration_19.eContents().get(0);
		private final EnumLiteralDeclaration cSpringOAuth2ClientEnumLiteralDeclaration_20 = (EnumLiteralDeclaration)cAlternatives.eContents().get(20);
		private final Keyword cSpringOAuth2ClientSpringOAuth2ClientKeyword_20_0 = (Keyword)cSpringOAuth2ClientEnumLiteralDeclaration_20.eContents().get(0);
		private final EnumLiteralDeclaration cSpringJerseyEnumLiteralDeclaration_21 = (EnumLiteralDeclaration)cAlternatives.eContents().get(21);
		private final Keyword cSpringJerseySpringJerseyKeyword_21_0 = (Keyword)cSpringJerseyEnumLiteralDeclaration_21.eContents().get(0);
		private final EnumLiteralDeclaration cSpringJDBCEnumLiteralDeclaration_22 = (EnumLiteralDeclaration)cAlternatives.eContents().get(22);
		private final Keyword cSpringJDBCSpringJDBCKeyword_22_0 = (Keyword)cSpringJDBCEnumLiteralDeclaration_22.eContents().get(0);
		private final EnumLiteralDeclaration cSpringIntegrationEnumLiteralDeclaration_23 = (EnumLiteralDeclaration)cAlternatives.eContents().get(23);
		private final Keyword cSpringIntegrationSpringIntegrationKeyword_23_0 = (Keyword)cSpringIntegrationEnumLiteralDeclaration_23.eContents().get(0);
		private final EnumLiteralDeclaration cSpringDataRestEnumLiteralDeclaration_24 = (EnumLiteralDeclaration)cAlternatives.eContents().get(24);
		private final Keyword cSpringDataRestSpringDataRestKeyword_24_0 = (Keyword)cSpringDataRestEnumLiteralDeclaration_24.eContents().get(0);
		private final EnumLiteralDeclaration cSpringGraphQLEnumLiteralDeclaration_25 = (EnumLiteralDeclaration)cAlternatives.eContents().get(25);
		private final Keyword cSpringGraphQLSpringGraphQLKeyword_25_0 = (Keyword)cSpringGraphQLEnumLiteralDeclaration_25.eContents().get(0);
		private final EnumLiteralDeclaration cSpringDataElasticsearchEnumLiteralDeclaration_26 = (EnumLiteralDeclaration)cAlternatives.eContents().get(26);
		private final Keyword cSpringDataElasticsearchSpringDataElasticsearchKeyword_26_0 = (Keyword)cSpringDataElasticsearchEnumLiteralDeclaration_26.eContents().get(0);
		private final EnumLiteralDeclaration cSpringDataJDBCEnumLiteralDeclaration_27 = (EnumLiteralDeclaration)cAlternatives.eContents().get(27);
		private final Keyword cSpringDataJDBCSpringDataJDBCKeyword_27_0 = (Keyword)cSpringDataJDBCEnumLiteralDeclaration_27.eContents().get(0);
		private final EnumLiteralDeclaration cSpringDataMongoDBEnumLiteralDeclaration_28 = (EnumLiteralDeclaration)cAlternatives.eContents().get(28);
		private final Keyword cSpringDataMongoDBSpringDataMongoDBKeyword_28_0 = (Keyword)cSpringDataMongoDBEnumLiteralDeclaration_28.eContents().get(0);
		private final EnumLiteralDeclaration cSwaggerEnumLiteralDeclaration_29 = (EnumLiteralDeclaration)cAlternatives.eContents().get(29);
		private final Keyword cSwaggerSwaggerKeyword_29_0 = (Keyword)cSwaggerEnumLiteralDeclaration_29.eContents().get(0);
		private final EnumLiteralDeclaration cSpringSecurityEnumLiteralDeclaration_30 = (EnumLiteralDeclaration)cAlternatives.eContents().get(30);
		private final Keyword cSpringSecuritySpringSecurityKeyword_30_0 = (Keyword)cSpringSecurityEnumLiteralDeclaration_30.eContents().get(0);
		private final EnumLiteralDeclaration cSpringActuatorEnumLiteralDeclaration_31 = (EnumLiteralDeclaration)cAlternatives.eContents().get(31);
		private final Keyword cSpringActuatorSpringActuatorKeyword_31_0 = (Keyword)cSpringActuatorEnumLiteralDeclaration_31.eContents().get(0);
		private final EnumLiteralDeclaration cSpringGraphQLTestEnumLiteralDeclaration_32 = (EnumLiteralDeclaration)cAlternatives.eContents().get(32);
		private final Keyword cSpringGraphQLTestSpringGraphQLTestKeyword_32_0 = (Keyword)cSpringGraphQLTestEnumLiteralDeclaration_32.eContents().get(0);
		
		//enum DependencyType:
		//  SpringDataJpa | SpringWeb | Lombok | MySQLDriver | DevTools
		//  |SpringKafka | SpringIntegrationWS | SpringIntegrationWebFlux |
		//  SpringIntegrationSecurity | SpringIntegrationRedis | SpringIntegrationMongoDB
		//  | SpringIntegrationKafka | SpringIntegrationJPA | SpringIntegrationJDBC
		//  | SpringIntegrationHTTP | SpringIntegrationAMQP | SpringWebFlux |
		//  SpringWebServices | SpringValidation | SpringThymeleaf | SpringOAuth2Client
		//  | SpringJersey | SpringJDBC | SpringIntegration | SpringDataRest| SpringGraphQL
		// | SpringDataElasticsearch | SpringDataJDBC | SpringDataMongoDB |
		//   Swagger | SpringSecurity | SpringActuator | SpringGraphQLTest;
		public EnumRule getRule() { return rule; }
		
		// SpringDataJpa | SpringWeb | Lombok | MySQLDriver | DevTools
		// |SpringKafka | SpringIntegrationWS | SpringIntegrationWebFlux |
		// SpringIntegrationSecurity | SpringIntegrationRedis | SpringIntegrationMongoDB
		// | SpringIntegrationKafka | SpringIntegrationJPA | SpringIntegrationJDBC
		// | SpringIntegrationHTTP | SpringIntegrationAMQP | SpringWebFlux |
		// SpringWebServices | SpringValidation | SpringThymeleaf | SpringOAuth2Client
		// | SpringJersey | SpringJDBC | SpringIntegration | SpringDataRest| SpringGraphQL
		//| SpringDataElasticsearch | SpringDataJDBC | SpringDataMongoDB |
		//  Swagger | SpringSecurity | SpringActuator | SpringGraphQLTest
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SpringDataJpa
		public EnumLiteralDeclaration getSpringDataJpaEnumLiteralDeclaration_0() { return cSpringDataJpaEnumLiteralDeclaration_0; }
		
		public Keyword getSpringDataJpaSpringDataJpaKeyword_0_0() { return cSpringDataJpaSpringDataJpaKeyword_0_0; }
		
		//SpringWeb
		public EnumLiteralDeclaration getSpringWebEnumLiteralDeclaration_1() { return cSpringWebEnumLiteralDeclaration_1; }
		
		public Keyword getSpringWebSpringWebKeyword_1_0() { return cSpringWebSpringWebKeyword_1_0; }
		
		//Lombok
		public EnumLiteralDeclaration getLombokEnumLiteralDeclaration_2() { return cLombokEnumLiteralDeclaration_2; }
		
		public Keyword getLombokLombokKeyword_2_0() { return cLombokLombokKeyword_2_0; }
		
		//MySQLDriver
		public EnumLiteralDeclaration getMySQLDriverEnumLiteralDeclaration_3() { return cMySQLDriverEnumLiteralDeclaration_3; }
		
		public Keyword getMySQLDriverMySQLDriverKeyword_3_0() { return cMySQLDriverMySQLDriverKeyword_3_0; }
		
		//DevTools
		public EnumLiteralDeclaration getDevToolsEnumLiteralDeclaration_4() { return cDevToolsEnumLiteralDeclaration_4; }
		
		public Keyword getDevToolsDevToolsKeyword_4_0() { return cDevToolsDevToolsKeyword_4_0; }
		
		//SpringKafka
		public EnumLiteralDeclaration getSpringKafkaEnumLiteralDeclaration_5() { return cSpringKafkaEnumLiteralDeclaration_5; }
		
		public Keyword getSpringKafkaSpringKafkaKeyword_5_0() { return cSpringKafkaSpringKafkaKeyword_5_0; }
		
		//SpringIntegrationWS
		public EnumLiteralDeclaration getSpringIntegrationWSEnumLiteralDeclaration_6() { return cSpringIntegrationWSEnumLiteralDeclaration_6; }
		
		public Keyword getSpringIntegrationWSSpringIntegrationWSKeyword_6_0() { return cSpringIntegrationWSSpringIntegrationWSKeyword_6_0; }
		
		//SpringIntegrationWebFlux
		public EnumLiteralDeclaration getSpringIntegrationWebFluxEnumLiteralDeclaration_7() { return cSpringIntegrationWebFluxEnumLiteralDeclaration_7; }
		
		public Keyword getSpringIntegrationWebFluxSpringIntegrationWebFluxKeyword_7_0() { return cSpringIntegrationWebFluxSpringIntegrationWebFluxKeyword_7_0; }
		
		//SpringIntegrationSecurity
		public EnumLiteralDeclaration getSpringIntegrationSecurityEnumLiteralDeclaration_8() { return cSpringIntegrationSecurityEnumLiteralDeclaration_8; }
		
		public Keyword getSpringIntegrationSecuritySpringIntegrationSecurityKeyword_8_0() { return cSpringIntegrationSecuritySpringIntegrationSecurityKeyword_8_0; }
		
		//SpringIntegrationRedis
		public EnumLiteralDeclaration getSpringIntegrationRedisEnumLiteralDeclaration_9() { return cSpringIntegrationRedisEnumLiteralDeclaration_9; }
		
		public Keyword getSpringIntegrationRedisSpringIntegrationRedisKeyword_9_0() { return cSpringIntegrationRedisSpringIntegrationRedisKeyword_9_0; }
		
		//SpringIntegrationMongoDB
		public EnumLiteralDeclaration getSpringIntegrationMongoDBEnumLiteralDeclaration_10() { return cSpringIntegrationMongoDBEnumLiteralDeclaration_10; }
		
		public Keyword getSpringIntegrationMongoDBSpringIntegrationMongoDBKeyword_10_0() { return cSpringIntegrationMongoDBSpringIntegrationMongoDBKeyword_10_0; }
		
		//SpringIntegrationKafka
		public EnumLiteralDeclaration getSpringIntegrationKafkaEnumLiteralDeclaration_11() { return cSpringIntegrationKafkaEnumLiteralDeclaration_11; }
		
		public Keyword getSpringIntegrationKafkaSpringIntegrationKafkaKeyword_11_0() { return cSpringIntegrationKafkaSpringIntegrationKafkaKeyword_11_0; }
		
		//SpringIntegrationJPA
		public EnumLiteralDeclaration getSpringIntegrationJPAEnumLiteralDeclaration_12() { return cSpringIntegrationJPAEnumLiteralDeclaration_12; }
		
		public Keyword getSpringIntegrationJPASpringIntegrationJPAKeyword_12_0() { return cSpringIntegrationJPASpringIntegrationJPAKeyword_12_0; }
		
		//SpringIntegrationJDBC
		public EnumLiteralDeclaration getSpringIntegrationJDBCEnumLiteralDeclaration_13() { return cSpringIntegrationJDBCEnumLiteralDeclaration_13; }
		
		public Keyword getSpringIntegrationJDBCSpringIntegrationJDBCKeyword_13_0() { return cSpringIntegrationJDBCSpringIntegrationJDBCKeyword_13_0; }
		
		//SpringIntegrationHTTP
		public EnumLiteralDeclaration getSpringIntegrationHTTPEnumLiteralDeclaration_14() { return cSpringIntegrationHTTPEnumLiteralDeclaration_14; }
		
		public Keyword getSpringIntegrationHTTPSpringIntegrationHTTPKeyword_14_0() { return cSpringIntegrationHTTPSpringIntegrationHTTPKeyword_14_0; }
		
		//SpringIntegrationAMQP
		public EnumLiteralDeclaration getSpringIntegrationAMQPEnumLiteralDeclaration_15() { return cSpringIntegrationAMQPEnumLiteralDeclaration_15; }
		
		public Keyword getSpringIntegrationAMQPSpringIntegrationAMQPKeyword_15_0() { return cSpringIntegrationAMQPSpringIntegrationAMQPKeyword_15_0; }
		
		//SpringWebFlux
		public EnumLiteralDeclaration getSpringWebFluxEnumLiteralDeclaration_16() { return cSpringWebFluxEnumLiteralDeclaration_16; }
		
		public Keyword getSpringWebFluxSpringWebFluxKeyword_16_0() { return cSpringWebFluxSpringWebFluxKeyword_16_0; }
		
		//SpringWebServices
		public EnumLiteralDeclaration getSpringWebServicesEnumLiteralDeclaration_17() { return cSpringWebServicesEnumLiteralDeclaration_17; }
		
		public Keyword getSpringWebServicesSpringWebServicesKeyword_17_0() { return cSpringWebServicesSpringWebServicesKeyword_17_0; }
		
		//SpringValidation
		public EnumLiteralDeclaration getSpringValidationEnumLiteralDeclaration_18() { return cSpringValidationEnumLiteralDeclaration_18; }
		
		public Keyword getSpringValidationSpringValidationKeyword_18_0() { return cSpringValidationSpringValidationKeyword_18_0; }
		
		//SpringThymeleaf
		public EnumLiteralDeclaration getSpringThymeleafEnumLiteralDeclaration_19() { return cSpringThymeleafEnumLiteralDeclaration_19; }
		
		public Keyword getSpringThymeleafSpringThymeleafKeyword_19_0() { return cSpringThymeleafSpringThymeleafKeyword_19_0; }
		
		//SpringOAuth2Client
		public EnumLiteralDeclaration getSpringOAuth2ClientEnumLiteralDeclaration_20() { return cSpringOAuth2ClientEnumLiteralDeclaration_20; }
		
		public Keyword getSpringOAuth2ClientSpringOAuth2ClientKeyword_20_0() { return cSpringOAuth2ClientSpringOAuth2ClientKeyword_20_0; }
		
		//SpringJersey
		public EnumLiteralDeclaration getSpringJerseyEnumLiteralDeclaration_21() { return cSpringJerseyEnumLiteralDeclaration_21; }
		
		public Keyword getSpringJerseySpringJerseyKeyword_21_0() { return cSpringJerseySpringJerseyKeyword_21_0; }
		
		//SpringJDBC
		public EnumLiteralDeclaration getSpringJDBCEnumLiteralDeclaration_22() { return cSpringJDBCEnumLiteralDeclaration_22; }
		
		public Keyword getSpringJDBCSpringJDBCKeyword_22_0() { return cSpringJDBCSpringJDBCKeyword_22_0; }
		
		//SpringIntegration
		public EnumLiteralDeclaration getSpringIntegrationEnumLiteralDeclaration_23() { return cSpringIntegrationEnumLiteralDeclaration_23; }
		
		public Keyword getSpringIntegrationSpringIntegrationKeyword_23_0() { return cSpringIntegrationSpringIntegrationKeyword_23_0; }
		
		//SpringDataRest
		public EnumLiteralDeclaration getSpringDataRestEnumLiteralDeclaration_24() { return cSpringDataRestEnumLiteralDeclaration_24; }
		
		public Keyword getSpringDataRestSpringDataRestKeyword_24_0() { return cSpringDataRestSpringDataRestKeyword_24_0; }
		
		//SpringGraphQL
		public EnumLiteralDeclaration getSpringGraphQLEnumLiteralDeclaration_25() { return cSpringGraphQLEnumLiteralDeclaration_25; }
		
		public Keyword getSpringGraphQLSpringGraphQLKeyword_25_0() { return cSpringGraphQLSpringGraphQLKeyword_25_0; }
		
		//SpringDataElasticsearch
		public EnumLiteralDeclaration getSpringDataElasticsearchEnumLiteralDeclaration_26() { return cSpringDataElasticsearchEnumLiteralDeclaration_26; }
		
		public Keyword getSpringDataElasticsearchSpringDataElasticsearchKeyword_26_0() { return cSpringDataElasticsearchSpringDataElasticsearchKeyword_26_0; }
		
		//SpringDataJDBC
		public EnumLiteralDeclaration getSpringDataJDBCEnumLiteralDeclaration_27() { return cSpringDataJDBCEnumLiteralDeclaration_27; }
		
		public Keyword getSpringDataJDBCSpringDataJDBCKeyword_27_0() { return cSpringDataJDBCSpringDataJDBCKeyword_27_0; }
		
		//SpringDataMongoDB
		public EnumLiteralDeclaration getSpringDataMongoDBEnumLiteralDeclaration_28() { return cSpringDataMongoDBEnumLiteralDeclaration_28; }
		
		public Keyword getSpringDataMongoDBSpringDataMongoDBKeyword_28_0() { return cSpringDataMongoDBSpringDataMongoDBKeyword_28_0; }
		
		//Swagger
		public EnumLiteralDeclaration getSwaggerEnumLiteralDeclaration_29() { return cSwaggerEnumLiteralDeclaration_29; }
		
		public Keyword getSwaggerSwaggerKeyword_29_0() { return cSwaggerSwaggerKeyword_29_0; }
		
		//SpringSecurity
		public EnumLiteralDeclaration getSpringSecurityEnumLiteralDeclaration_30() { return cSpringSecurityEnumLiteralDeclaration_30; }
		
		public Keyword getSpringSecuritySpringSecurityKeyword_30_0() { return cSpringSecuritySpringSecurityKeyword_30_0; }
		
		//SpringActuator
		public EnumLiteralDeclaration getSpringActuatorEnumLiteralDeclaration_31() { return cSpringActuatorEnumLiteralDeclaration_31; }
		
		public Keyword getSpringActuatorSpringActuatorKeyword_31_0() { return cSpringActuatorSpringActuatorKeyword_31_0; }
		
		//SpringGraphQLTest
		public EnumLiteralDeclaration getSpringGraphQLTestEnumLiteralDeclaration_32() { return cSpringGraphQLTestEnumLiteralDeclaration_32; }
		
		public Keyword getSpringGraphQLTestSpringGraphQLTestKeyword_32_0() { return cSpringGraphQLTestSpringGraphQLTestKeyword_32_0; }
	}
	public class TypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.spring.fluent.SpringFluentDSL.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLongEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLongLongKeyword_0_0 = (Keyword)cLongEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIntegerEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIntegerIntegerKeyword_1_0 = (Keyword)cIntegerEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDoubleDoubleKeyword_2_0 = (Keyword)cDoubleEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cStringStringKeyword_3_0 = (Keyword)cStringEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDateDateKeyword_4_0 = (Keyword)cDateEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cTimeEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cTimeTimeKeyword_5_0 = (Keyword)cTimeEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cBooleanBooleanKeyword_6_0 = (Keyword)cBooleanEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum Type:
		//  Long | Integer | Double | String | Date | Time | Boolean;
		public EnumRule getRule() { return rule; }
		
		//Long | Integer | Double | String | Date | Time | Boolean
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Long
		public EnumLiteralDeclaration getLongEnumLiteralDeclaration_0() { return cLongEnumLiteralDeclaration_0; }
		
		public Keyword getLongLongKeyword_0_0() { return cLongLongKeyword_0_0; }
		
		//Integer
		public EnumLiteralDeclaration getIntegerEnumLiteralDeclaration_1() { return cIntegerEnumLiteralDeclaration_1; }
		
		public Keyword getIntegerIntegerKeyword_1_0() { return cIntegerIntegerKeyword_1_0; }
		
		//Double
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_2() { return cDoubleEnumLiteralDeclaration_2; }
		
		public Keyword getDoubleDoubleKeyword_2_0() { return cDoubleDoubleKeyword_2_0; }
		
		//String
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_3() { return cStringEnumLiteralDeclaration_3; }
		
		public Keyword getStringStringKeyword_3_0() { return cStringStringKeyword_3_0; }
		
		//Date
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_4() { return cDateEnumLiteralDeclaration_4; }
		
		public Keyword getDateDateKeyword_4_0() { return cDateDateKeyword_4_0; }
		
		//Time
		public EnumLiteralDeclaration getTimeEnumLiteralDeclaration_5() { return cTimeEnumLiteralDeclaration_5; }
		
		public Keyword getTimeTimeKeyword_5_0() { return cTimeTimeKeyword_5_0; }
		
		//Boolean
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_6() { return cBooleanEnumLiteralDeclaration_6; }
		
		public Keyword getBooleanBooleanKeyword_6_0() { return cBooleanBooleanKeyword_6_0; }
	}
	
	private final ModelElements pModel;
	private final PrefixElements pPrefix;
	private final AppNameElements pAppName;
	private final DependenciesElements pDependencies;
	private final DependencyTypeElements eDependencyType;
	private final DependencyElements pDependency;
	private final EntitiesElements pEntities;
	private final EntityElements pEntity;
	private final FeatureElements pFeature;
	private final StrategyElements pStrategy;
	private final IDENTITYElements pIDENTITY;
	private final OperationElements pOperation;
	private final AttributeElements pAttribute;
	private final TypeElements eType;
	private final RelationElements pRelation;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SpringFluentDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pPrefix = new PrefixElements();
		this.pAppName = new AppNameElements();
		this.pDependencies = new DependenciesElements();
		this.eDependencyType = new DependencyTypeElements();
		this.pDependency = new DependencyElements();
		this.pEntities = new EntitiesElements();
		this.pEntity = new EntityElements();
		this.pFeature = new FeatureElements();
		this.pStrategy = new StrategyElements();
		this.pIDENTITY = new IDENTITYElements();
		this.pOperation = new OperationElements();
		this.pAttribute = new AttributeElements();
		this.eType = new TypeElements();
		this.pRelation = new RelationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.spring.fluent.SpringFluentDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//  prefix=Prefix
	//  appName=AppName
	//  dependencies=Dependencies
	//  entities=Entities;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Prefix:
	//  {Prefix} 'prefix:' prefix=STRING;
	public PrefixElements getPrefixAccess() {
		return pPrefix;
	}
	
	public ParserRule getPrefixRule() {
		return getPrefixAccess().getRule();
	}
	
	//AppName:
	//  {AppName} 'app_name:' appName=STRING;
	public AppNameElements getAppNameAccess() {
		return pAppName;
	}
	
	public ParserRule getAppNameRule() {
		return getAppNameAccess().getRule();
	}
	
	//Dependencies:
	//  {Dependencies} 'dependencies' '{'
	//    dependencies+=Dependency (',' dependencies+=Dependency)*
	//  '}';
	public DependenciesElements getDependenciesAccess() {
		return pDependencies;
	}
	
	public ParserRule getDependenciesRule() {
		return getDependenciesAccess().getRule();
	}
	
	//enum DependencyType:
	//  SpringDataJpa | SpringWeb | Lombok | MySQLDriver | DevTools
	//  |SpringKafka | SpringIntegrationWS | SpringIntegrationWebFlux |
	//  SpringIntegrationSecurity | SpringIntegrationRedis | SpringIntegrationMongoDB
	//  | SpringIntegrationKafka | SpringIntegrationJPA | SpringIntegrationJDBC
	//  | SpringIntegrationHTTP | SpringIntegrationAMQP | SpringWebFlux |
	//  SpringWebServices | SpringValidation | SpringThymeleaf | SpringOAuth2Client
	//  | SpringJersey | SpringJDBC | SpringIntegration | SpringDataRest| SpringGraphQL
	// | SpringDataElasticsearch | SpringDataJDBC | SpringDataMongoDB |
	//   Swagger | SpringSecurity | SpringActuator | SpringGraphQLTest;
	public DependencyTypeElements getDependencyTypeAccess() {
		return eDependencyType;
	}
	
	public EnumRule getDependencyTypeRule() {
		return getDependencyTypeAccess().getRule();
	}
	
	// //to complete
	//Dependency:
	//  {Dependency} dependency=DependencyType;
	public DependencyElements getDependencyAccess() {
		return pDependency;
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}
	
	//Entities:
	//  {Entities} 'entities' '{'
	//    entities+=Entity*
	//  '}';
	public EntitiesElements getEntitiesAccess() {
		return pEntities;
	}
	
	public ParserRule getEntitiesRule() {
		return getEntitiesAccess().getRule();
	}
	
	//Entity:
	//  'entity' name=ID ('extends' '['
	//    'strategy' '=' strategy=Strategy ']'
	//    superType=[Entity|ID]
	//  )? '{'
	//    feature=Feature
	//  '}';
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Feature:
	//  {Feature} operation=Operation id=IDENTITY  attributes+=(Attribute)* relations+=(Relation)*;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	//Strategy :
	//    {Strategy}
	//     strategy=('SingleTable' | 'JoinedTable' | 'TablePerClass');
	public StrategyElements getStrategyAccess() {
		return pStrategy;
	}
	
	public ParserRule getStrategyRule() {
		return getStrategyAccess().getRule();
	}
	
	//IDENTITY:
	//    'id' ':' type=Type 'pk' ;
	public IDENTITYElements getIDENTITYAccess() {
		return pIDENTITY;
	}
	
	public ParserRule getIDENTITYRule() {
		return getIDENTITYAccess().getRule();
	}
	
	//Operation:
	//  'ops' ':' (
	//    operation=STRING
	//  );
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//Attribute:
	//  name=ID ':' type=Type;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//enum Type:
	//  Long | Integer | Double | String | Date | Time | Boolean;
	public TypeElements getTypeAccess() {
		return eType;
	}
	
	public EnumRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//Relation:
	//  name=ID ':' target=[Entity|ID] type=('mto' | 'otm' | 'oto' | 'mtm');
	public RelationElements getRelationAccess() {
		return pRelation;
	}
	
	public ParserRule getRelationRule() {
		return getRelationAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
